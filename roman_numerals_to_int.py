alphabet = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}   #алфавит

def isRN(rn):                              #функция корректности вводимого римского числа
    if type(rn) != str:                    #проверяем, является ли объект числом
        return False
    count = 1                              #переменная, считающая, сколько раз подряд идёт данная цифра
    for i in range(len(rn)):               #проверяем каждый символ римского числа
        if rn[i] not in alphabet.keys():   #если число не входит в наш алфавит, то входная строка некорректна
            return False
        if i > 0:                          #считаем, сколько раз подряд повторяется текущий символ
            if rn[i] == rn[i - 1]:
                count = count + 1
                if count == 4:             #если повторяется больше трёх раз, то нарушается правило Шварцмана - строка некорректна
                    return False
            else:
                count = 1
    return True                            #если нигде не нашли ошибку, считаем, что запись римского числа корректна

def roman_numerals_to_int(roman_numeral):   #функция перевода числа, состоящего из римских цифр
    if isRN(roman_numeral) == 0:            #если данная строка не является римским числом, то возвращаем None
        return None
    res = 0                                 #переменная, хранящая будущий результат
    for i in range(len(roman_numeral)):     #проходим по всем символам входной строки
        if i + 1 != len(roman_numeral) and alphabet[roman_numeral[i]] < alphabet[roman_numeral[i + 1]]:
            res = res - alphabet[roman_numeral[i]]   #если текущая римская цифра меньше следующей, то отнимаем её от результата
        else:                               #в остальных случаем - прибавляем цифру к результату
            res = res + alphabet[roman_numeral[i]]
    return res                              #возвращаем итоговую сумму

##Некоторые варианты входных строк, которые кажутся "бредовыми", такие как, например, IVIV, обрабатываются программой по
##общим правилам. Несмотря на то, что не существует арабского числа, которое в переводе в римские выглядело бы как IVIV,
##такое римское число не противоречит правилам записи римских цифр. IVIV переведётся функцией в 8, хотя 8 в римское
##число перевелось бы как VIII.